package com.capyour.voiceweather;

import android.content.Intent;
import android.speech.RecognizerIntent;
import android.support.annotation.Nullable;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.ImageButton;
import android.widget.TextView;
import android.widget.Toast;

import java.util.ArrayList;
import java.util.Locale;

import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;
import okhttp3.WebSocket;
import okhttp3.WebSocketListener;
import okio.ByteString;

public class MainActivity extends AppCompatActivity {

    private ImageButton imageButton;
    private TextView textView,temp,humidity;

    private OkHttpClient client;

    public WebSocket ws;

    private String check="";


    public static final int REQUEST_CODE = 1000;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        textView = findViewById(R.id.main_textview);
        imageButton  = findViewById(R.id.main_button);
        temp = findViewById(R.id.main_temp);
        humidity = findViewById(R.id.main_humidity);


        client = new OkHttpClient();
        Request request = new Request.Builder().url("ws://192.168.43.135:81/").build();
        EchoWebSocketListener listener = new EchoWebSocketListener();
        this.ws = client.newWebSocket(request, listener);


        imageButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                startList();
            }
        });
    }

    private void startList() {

        Intent intent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
        intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL,RecognizerIntent.LANGUAGE_MODEL_FREE_FORM);
        intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE,Locale.getDefault());
        intent.putExtra(RecognizerIntent.EXTRA_PROMPT,"Speak something");


        try
        {
            startActivityForResult(intent,REQUEST_CODE);
        }
        catch (Exception e)
        {
            Toast.makeText(MainActivity.this,e.getMessage(),Toast.LENGTH_LONG).show();
        }
    }


    @Override
    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        switch (requestCode)
        {
            case REQUEST_CODE:{
                if(resultCode == RESULT_OK && null!=data)
                {

                    ArrayList<String> list = data.getStringArrayListExtra(RecognizerIntent.EXTRA_RESULTS);
                    textView.setText(list.get(0));
                    ws.send(list.get(0));
                    check=list.get(0);

                }
                break;
            }
        }
    }


    private final class EchoWebSocketListener extends WebSocketListener {
        private static final int NORMAL_CLOSURE_STATUS = 1000;

        @Override
        public void onOpen(WebSocket webSocket, Response response) {

            webSocket.send("connection");

            //   webSocket.send("Hello, it's SSaurel !");
            //  webSocket.send("What's up ?");

        }

        @Override
        public void onMessage(WebSocket webSocket, String text) {
            output("Receiving : " + text);

            setVal(text);


        }

        @Override
        public void onMessage(WebSocket webSocket, ByteString bytes) {
            output("Receiving bytes : " + bytes.hex());
        }

        @Override
        public void onClosing(WebSocket webSocket, int code, String reason) {
            webSocket.close(NORMAL_CLOSURE_STATUS, null);
            output("Closing : " + code + " / " + reason);
        }

        @Override
        public void onFailure(WebSocket webSocket, Throwable t, Response response) {
            output("Error : " + t.getMessage());
        }


    }


    private void setVal(final String text) {
        runOnUiThread(new Runnable() {
            @Override
            public void run() {
                if(check.equals("humidity"))
                {
                    humidity.setText(text);
                }
                else if(check.equals("temperature"))
                {
                    temp.setText(text);
                }
                else
                {
                    humidity.setText("0");
                    temp.setText("0");
                }
            }
        });


    }

    private void output(final String s) {
        runOnUiThread(new Runnable() {
            @Override
            public void run() {
                Toast.makeText(MainActivity.this,s,Toast.LENGTH_LONG).show();
            }
        });

    }
}
